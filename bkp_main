#include <allegro5/bitmap.h>
#include <allegro5/bitmap_draw.h>
#include <allegro5/bitmap_io.h>
#include <allegro5/color.h>
#include <allegro5/display.h>
#include <allegro5/keycodes.h>
#include <stdio.h>
#include <stdlib.h>
#include <allegro5/allegro5.h>
#include <allegro5/allegro_font.h>
#include <allegro5/allegro_primitives.h>
#include <allegro5/allegro_audio.h>
#include <allegro5/allegro_acodec.h>
#include <allegro5/allegro_image.h>

const int WIDTH = 1280;
const int HEIGTH = 720;

void must_init(bool test, const char *description)
{
    if(test) return;

    printf("couldn't initialize %s\n", description);
    exit(1);
}

int main()
{
    must_init(al_init(), "allegro");
    must_init(al_install_keyboard(), "keyboard");

    ALLEGRO_TIMER* timer = al_create_timer(1.0 / 30.0);
    must_init(timer, "timer");

    ALLEGRO_EVENT_QUEUE* queue = al_create_event_queue();
    must_init(queue, "queue");

    al_set_new_display_option(ALLEGRO_SAMPLE_BUFFERS, 1, ALLEGRO_SUGGEST);
    al_set_new_display_option(ALLEGRO_SAMPLES, 8, ALLEGRO_SUGGEST);
    al_set_new_bitmap_flags(ALLEGRO_MIN_LINEAR | ALLEGRO_MAG_LINEAR);

    ALLEGRO_DISPLAY* disp = al_create_display(WIDTH, HEIGTH);
    must_init(disp, "display");

    ALLEGRO_FONT* font = al_create_builtin_font();
    must_init(font, "font");

    must_init(al_init_primitives_addon(), "primitives");

    al_register_event_source(queue, al_get_keyboard_event_source());
    al_register_event_source(queue, al_get_display_event_source(disp));
    al_register_event_source(queue, al_get_timer_event_source(timer));

    must_init(al_init_image_addon(), "imagem");
    ALLEGRO_BITMAP *mist = al_load_bitmap("./assets/paralax/01_Mist.png");
    ALLEGRO_BITMAP *bushes = al_load_bitmap("./assets/paralax/02_Bushes.png");
    ALLEGRO_BITMAP *particles = al_load_bitmap("./assets/paralax/03_Particles.png");
    ALLEGRO_BITMAP *forest = al_load_bitmap("./assets/paralax/04_Forest.png");
    ALLEGRO_BITMAP *particles02 = al_load_bitmap("./assets/paralax/05_Particles.png");
    ALLEGRO_BITMAP *forest02 = al_load_bitmap("./assets/paralax/06_Forest.png");
    ALLEGRO_BITMAP *forest03 = al_load_bitmap("./assets/paralax/07_Forest.png");
    ALLEGRO_BITMAP *forest04 = al_load_bitmap("./assets/paralax/08_Forest.png");
    ALLEGRO_BITMAP *forest05 = al_load_bitmap("./assets/paralax/09_Forest.png");
    ALLEGRO_BITMAP *sky = al_load_bitmap("./assets/paralax/10_Sky.png");

    ALLEGRO_BITMAP *dino = al_load_bitmap("./assets/spritesheet.png");

    must_init(mist, "plano de fundo");
    must_init(bushes, "plano de fundo");
    must_init(particles, "plano de fundo");
    must_init(forest, "plano de fundo");
    must_init(particles02, "plano de fundo");
    must_init(forest02, "plano de fundo");
    must_init(forest03, "plano de fundo");
    must_init(forest04, "plano de fundo");
    must_init(forest05, "plano de fundo");
    must_init(sky, "plano de fundo");

    must_init(dino, "dino");

    bool done = false;
    bool redraw = true;
    ALLEGRO_EVENT event;

    float x, y;
    x = 100;
    y = 100;

    #define KEY_SEEN     1
    #define KEY_DOWN     2

    unsigned char key[ALLEGRO_KEY_MAX];
    memset(key, 0, sizeof(key));

    al_start_timer(timer);
    while(1)
    {
        al_wait_for_event(queue, &event);

        switch(event.type)
        {
            case ALLEGRO_EVENT_TIMER:
                if(key[ALLEGRO_KEY_UP])
                    y--;
                if(key[ALLEGRO_KEY_DOWN])
                    y++;
                if(key[ALLEGRO_KEY_LEFT])
                    x--;
                if(key[ALLEGRO_KEY_RIGHT])
                    x++;

                if(key[ALLEGRO_KEY_W])
                    // y--;
                    y -= 5;
                if(key[ALLEGRO_KEY_S])
                    // y++;
                    y += 5;
                if(key[ALLEGRO_KEY_A])
                    // x--;
                    x -= 5;
                if(key[ALLEGRO_KEY_D])
                    // x++;
                    x += 5;

                if(key[ALLEGRO_KEY_SPACE])
                {

                }

                if(key[ALLEGRO_KEY_ESCAPE])
                    done = true;

                for(int i = 0; i < ALLEGRO_KEY_MAX; i++)
                    key[i] &= ~KEY_SEEN;

                redraw = true;
                break;

            case ALLEGRO_EVENT_KEY_DOWN:
                key[event.keyboard.keycode] = KEY_SEEN | KEY_DOWN;
                break;
            case ALLEGRO_EVENT_KEY_UP:
                key[event.keyboard.keycode] &= ~KEY_DOWN;
                break;

            case ALLEGRO_EVENT_DISPLAY_CLOSE:
                done = true;
                break;
        }

        if(done)
            break;

        if(redraw && al_is_event_queue_empty(queue))
        {
            al_clear_to_color(al_map_rgb(0, 0, 0));
            al_draw_bitmap(sky, 0, 0, 0);
            al_draw_bitmap(forest05, 0, 0, 0);
            al_draw_bitmap(forest04, 0, 0, 0);
            al_draw_bitmap(forest03, 0, 0, 0);
            al_draw_bitmap(forest02, 0, 0, 0);
            al_draw_bitmap(particles02, 0, 0, 0);
            al_draw_bitmap(forest, 0, 0, 0);
            al_draw_bitmap(particles, 0, 0, 0);
            al_draw_bitmap(bushes, 0, 0, 0);
            al_draw_bitmap(mist, 0, 0, 0);

            al_draw_textf(font, al_map_rgb(255, 0, 0), 0, 0, 0, "X: %.1f Y: %.1f", x, y);
            // al_draw_filled_rectangle(x, y, x + 50, y + 50, al_map_rgb(0, 0, 255));

            al_draw_bitmap(dino, x, y, 0);


            al_flip_display();

            redraw = false;
        }
    }

    al_destroy_font(font);
    al_destroy_display(disp);
    al_destroy_timer(timer);
    al_destroy_event_queue(queue);
    al_destroy_bitmap(mist);
    al_destroy_bitmap(bushes);
    al_destroy_bitmap(particles);
    al_destroy_bitmap(forest);
    al_destroy_bitmap(particles02);
    al_destroy_bitmap(forest02);
    al_destroy_bitmap(forest03);
    al_destroy_bitmap(forest04);
    al_destroy_bitmap(forest05);
    al_destroy_bitmap(sky);

    al_destroy_bitmap(dino);

    return 0;
}
